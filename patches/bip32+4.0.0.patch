diff --git a/node_modules/bip32/src/bip32.js b/node_modules/bip32/src/bip32.js
index 9888131..426e3cd 100644
--- a/node_modules/bip32/src/bip32.js
+++ b/node_modules/bip32/src/bip32.js
@@ -7,6 +7,7 @@ const base_1 = require("@scure/base");
 const sha256_1 = require("@noble/hashes/sha256");
 const typeforce = require('typeforce');
 const wif = require('wif');
+const Buffer = require('safe-buffer').Buffer;
 const _bs58check = (0, base_1.base58check)(sha256_1.sha256);
 const bs58check = {
     encode: (data) => _bs58check.encode(Uint8Array.from(data)),
diff --git a/node_modules/bip32/src/crypto.js b/node_modules/bip32/src/crypto.js
index a8a1b61..39944d0 100644
--- a/node_modules/bip32/src/crypto.js
+++ b/node_modules/bip32/src/crypto.js
@@ -5,6 +5,7 @@ const hmac_1 = require("@noble/hashes/hmac");
 const ripemd160_1 = require("@noble/hashes/ripemd160");
 const sha256_1 = require("@noble/hashes/sha256");
 const sha512_1 = require("@noble/hashes/sha512");
+const Buffer = require('safe-buffer').Buffer;
 function hash160(buffer) {
     const sha256Hash = (0, sha256_1.sha256)(Uint8Array.from(buffer));
     return Buffer.from((0, ripemd160_1.ripemd160)(sha256Hash));
diff --git a/node_modules/bip32/src/testecc.js b/node_modules/bip32/src/testecc.js
index a8bbfb3..972e32d 100644
--- a/node_modules/bip32/src/testecc.js
+++ b/node_modules/bip32/src/testecc.js
@@ -1,6 +1,7 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.testEcc = void 0;
+const Buffer = require('safe-buffer').Buffer;
 const h = (hex) => Buffer.from(hex, 'hex');
 function testEcc(ecc) {
     assert(ecc.isPoint(h('0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798')));
